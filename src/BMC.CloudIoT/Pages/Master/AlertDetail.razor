@inject IJSRuntime jsRuntime
@using System.IO
@inject IToastService toastService
@inject AlertService service
@inject MqttTopicService MqttTopicSvc
@inject AzureBlobHelper blob;

@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-3 mb-n1" />
            @CustomHeader
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@TaskObject" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12" sm="12">
                    <MudCard>
                        <MudCardContent>
                            <input type="hidden" @bind="@TaskObject.Id" />
                            <MudTextField Label="Name" HelperText="Name"
                                          @bind-Value="TaskObject.Name" For="@(() => TaskObject.Name)" />

                            <MudSelect T="long" Label="Mqtt Topic" @bind-Value="@TaskObject.MqttTopicId" AnchorOrigin="Origin.BottomCenter">
                                @if (ListTopic != null)
                                    @foreach (var item in ListTopic)
                                    {
                                        <MudSelectItem Value="@(item.Id)">@item.Topic</MudSelectItem>
                                    }
                            </MudSelect>

                            <MudTextField Label="Filter Query" Class="mt-3"
                                          @bind-Value="TaskObject.FilterQuery" For="@(() => TaskObject.FilterQuery)" InputType="InputType.Text" />

                            <MudTextField Label="Message Template" Class="mt-3"
                                          @bind-Value="TaskObject.MessageTemplate" For="@(() => TaskObject.MessageTemplate)" InputType="InputType.Text" />

                            <MudTextField Label="Send To Email" Class="mt-3"
                                          @bind-Value="TaskObject.SendToEmail" For="@(() => TaskObject.SendToEmail)" InputType="InputType.Text" />

                            <MudTextField Label="Send To Phone" Class="mt-3"
                                          @bind-Value="TaskObject.SendToPhone" For="@(() => TaskObject.SendToPhone)" InputType="InputType.Text" />

                            <MudTextField Label="Call Url" Class="mt-3"
                                          @bind-Value="TaskObject.CallUrl" For="@(() => TaskObject.CallUrl)" InputType="InputType.Text" />

                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mr-2">Simpan</MudButton>
                            <MudButton ButtonType="ButtonType.Button" OnClick="Cancel" Variant="Variant.Filled" Color="Color.Secondary">Cancel</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>

            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>

    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    List<MqttTopic> ListTopic = new();
    private void Cancel()
    {
        MudDialog.Cancel();
    }

    [Parameter]
    public string CustomHeader { get; set; }
    [Parameter]
    public Alert TaskObject { get; set; }
    [Parameter]
    public Action DataChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListTopic = MqttTopicSvc.GetAllData();
    }
    private void OnValidSubmit(EditContext context)
    {
        if (TaskObject.Id == 0)
        {

            var hasil = service.InsertData(TaskObject);
            if (!hasil)
            {
                Snackbar.Add("Gagal menyimpan data. Isi data dengan lengkap.", Severity.Error);
                //toastService.ShowError("Gagal menyimpan data. Isi data dengan lengkap.", "Perhatian");
            }
        }
        else
        {
            service.UpdateData(TaskObject);
        }

        //In a real world scenario this bool would probably be a service to delete the item from api/database
        Snackbar.Add("Data Saved", Severity.Success);
        MudDialog.Close(DialogResult.Ok(TaskObject.Id));
        DataChanged?.Invoke();
    }

}